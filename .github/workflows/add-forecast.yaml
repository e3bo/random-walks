name: add-forecast-set
on:
  push:
    paths-ignore:
      - '.dvc/**'
      - dvc.lock
      - 'metrics/**'
      - README.md
    branches:
      - '*'
      - '!master'
jobs:
  backtest1:
    name: Train and forecast set 1
    runs-on: ubuntu-latest
    container: docker://eamon/sir-kf:2021-02-22
    strategy:
      matrix:
        fips: ["06", 48, 36, 53, 12, 42, 17, 13, 37, 26]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Train and forecast for one location
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          loc: ${{ matrix.fips }}
          JULIA_DEPOT_PATH: /home/rstudio/.julia
        run: |
          dvc pull --run-cache || true
          loc=$loc bash -x ./forecast.sh
          dvc push --run-cache
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "Automated Publisher"
          tstamp=$(date +%F-%H%m)
          branchname=${tstamp}-${loc}
          git checkout -b $branchname
          git add */dvc.yaml */dvc.lock
          if git commit -m "Forecast pipeline additions" && git push origin $branchname;
          then
            echo "changes pushed to $branchname"
          else
            echo "no new outputs"
          fi
  integration:
    name: Integrate new outputs for each location
    runs-on: ubuntu-latest
    needs: backtest1
    steps:
      - uses: actions/checkout@v2
      - name: Merge changes
        run: |
          git fetch
          git branch -a | grep -P "origin/202[1-9]-\d{2}-\d{2}-\d{4}-\d{2}" |  tr '\n' ' '> tomerge
          tstamp=$(date +%F-%H%m)
          branchname=${tstamp}-all-locations
          git checkout -b $branchname
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "Automated Publisher"
          git merge --no-edit $(cat tomerge)
          git push origin $branchname
          #shortnames=$(cat tomerge | sed "s/origin\///g")
          #git push origin --delete $shortnames