name: add-forecast-set
on:
  push:
    paths-ignore:
      - '.dvc/**'
      - dvc.lock
      - 'metrics/**'
      - README.md
    branches:
      - '*'
      - 'sir-ekf2'
      - '!sir-kf'
      - '!master'
jobs:
  backtest1:
    name: Train and forecast set 1
    runs-on: ubuntu-latest
    container: docker://eamon/sir-kf:2021-04-16
    strategy:
      matrix:
        fips: ["17"]
        fdts: ["2021-03-29"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Train and forecast for one location
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          loc: ${{ matrix.fips }}
          fdt: ${{ matrix.fdts }}
          JULIA_DEPOT_PATH: /home/rstudio/.julia
        run: |
          dvc pull hopkins/$fdt || true
          dvc pull forecasts/${fdt}-fips${loc} || true
          dvc pull healthdata/${fdt}/${loc} || true
          dvc pull hopkins-vaccine/$fdt || true
          fdt=$fdt loc=$loc bash -x ./forecast.sh
          dvc push --run-cache
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "Automated Publisher"
          tstamp=$(date +%F-%H%m)
          branchname=${tstamp}-fips${loc}-fdt${fdt}
          git checkout -b $branchname
          git add fips-${loc}/${fdt}/dvc.*
          git add fits/${fdt}-${loc}/fit-metrics.json
          if git commit -m "Forecast pipeline additions" && git push origin $branchname;
          then
            echo "Changes pushed to $branchname"
          else
            echo "No new outputs"
          fi
  integration:
    name: Integrate new outputs for each location
    runs-on: ubuntu-latest
    container: docker://eamon/sir-kf:2021-03-13
    needs: backtest1
    steps:
      - uses: actions/checkout@v2
      - name: Merge changes and evaluate
        env:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          git fetch
          git branch -a | grep -P "origin/202[1-9]-\d{2}-\d{2}-\d{4}-fips\d{2}-fdt202[012]-\d{2}-\d{2}" |  tr '\n' ' '> tomerge
          if ! [ -s tomerge ]; then
            echo "No changes to integrate."
            exit 0
          fi
          tstamp=$(date +%F-%H%m)
          branchname=${tstamp}-all-locations
          git checkout -b $branchname
          git config --local user.email "actions@users.noreply.github.com"
          git config --local user.name "Automated Publisher"
          git merge --no-edit $(cat tomerge)
          
          #dvc pull --run-cache || true
          #bash -x evaluate.sh
          #git commit -am "Update evaluations" || true
          git commit -am "Integrate forecasts" || true
          git push origin $branchname
          #dvc push --run-cache || true
          
          shortnames=$(cat tomerge | sed "s/remotes\/origin\///g")
          git push origin --delete $shortnames

          #dvc plots show \
          #  location-model.csv --show-vega > vega2.json
          #vl2png vega2.json | cml-publish --md >> report.md
          
          #cml-send-comment report.md
